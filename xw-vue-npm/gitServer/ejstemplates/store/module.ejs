import Service from "@service/<%= moduleName %>.js";
import util from "@util";
export default {
    namespaced: true,
    state:{
        dataSource:{
        <%_ data.state.dataSource.forEach(function(row){ -%>
            <%= row %>:[],
        <%_ _%><% }) -%>        
        },
        entity:{
        <%_ data.state.entity.forEach(function(row){ -%>
            <%= row %>:"",
        <%_ _%><% }) -%> 
        }
    },
    mutations:{
    <%_ data.mutation.forEach(function(row,index){ -%>
        <%= row.mutationName %>(state,val){
            <%_ if(row.isSelect){ -%>
            state.dataSource.<%= row.stateName %>=val;
            <%_ } -%>
            <%_ if(!row.isSelect){ -%>
            state.<%= row.stateName %> = util.object.cloneObj(val);
            <%_ } -%>
        },
    <%_ _%><% }) -%>
    },
    actions:{
    <%_ data.action.forEach(function(row,index){ -%>
        <%= row.actionName %>({state,commit,dispatch},d){
            return new Promise((resolve,reject) => {
                <%_ if(row.checkDataSource && row.checkDataSource != ""){ -%>
                if(state.dataSource.<%= row.checkDataSource %>.length > 0 ){
                    return resolve(state.dataSource.<%= row.checkDataSource %>);
                }
                <% } -%>
                
                Service.<%= row.actionName %>(<% if(!row.checkDataSource || row.checkDataSource == ""){ %>d.params<% } %>)
                    .then((t) => {
                        <%_ if(row.commit && row.commit != ""){ -%>
                        commit("<%= row.commit %>",t);
                        <%_ } -%>
                        resolve(t)
                    })
                    .catch(error => {
                        reject(error);
                    })
            })
            
        },
    <%_ _%><% }) -%>  
    }
}
