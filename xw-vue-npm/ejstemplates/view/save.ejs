<template>
    <div class="le_comps_core_css new_page_width">
        <h4 class="le_page_name"><%= data.PageTitle %></h4>
        <%_ _%><%- include("form.ejs",{data:data.model,model: data.ModuleName}) %>
        <div class="le_new_page_btn_group">
            <le-button type = "back" value = "返回" @click = "goBack"></le-button>
            <le-button type = "save" value = "保存" @click = "save"></le-button>
        </div>
    </div>
</template>
<script>
    import CommonUtil from '@util';
    import <%= data.ModuleName %>Model from '@model/<%= data.ModuleName %>'
    import <%= data.ModuleName %>Service from '@service/<%= data.ModuleName %>'
    import { createNamespacedHelpers } from 'vuex';
    const { mapState, mapActions,mapMutations } = createNamespacedHelpers('<%= data.ModuleName %>Store');
export default {
    name:"<%= data.ModuleName %><%= data.PageName %>",
    data(){
        return {
            <%= data.ModuleName %>: new <%= data.ModuleName %>Model()
        }
    },
    computed:{
        ...mapState([
            <%_ data.model.forEach(function(actionName){ -%>
            <%_ if (actionName.dataSource) { -%>
            "<%= actionName.dataSource%>",
            <%_ } -%>
            <%_ }) -%>
        ]),
        isEdit(){
            return this.$route.query.tag == "edit";
        },
        isCreate(){
            return this.$route.query.tag == "create";
        },
        isDetail(){
            return this.$route.query.tag == "detail";
        },
    },
    methods:{
        ...mapActions(
            [
                <%_ data.model.forEach(function(actionName){ -%>
                <%_ if (actionName.dataSource) { -%>
                "get<%= actionName.dataSource%>",
    <%_ } -%>
    <%_ }) -%>

            ]
        ),
        save(){
            this.$refs.saveForm.validate().then(x => {
                let data = this.salesModel.get();
                if (this.isEdit) {
                    data.id = this.$route.query.id
                }
                <%= data.ModuleName %>Service.save(data).then(res=>{
                    this.alert.showAlert("success",res.msg);
                    this.goBack();
                }).catch(err=>{
                    this.alert.showAlert("error",err.msg);
                })
            })
        },
        getDetail(){
            <%= data.ModuleName %>Service.detail({id: this.$route.query.id}).then(data => {
                this.<%= data.ModuleName %>.set(data.data)
            })
        },
        goBack(){
            this.$router.go(-1);
        },
    },
    mounted(){
    <%_ data.model.forEach(function(actionName){ -%>
        <%_ if (actionName.dataSource) { -%>
             this.get<%= actionName.dataSource -%>();
        <%_ } -%>
    <%_ }) -%>
        this.$refs.saveForm.reset();
        if(this.isEdit || this.isDetail){
            this.getDetail();
        }
    }
}
</script>
<style scoped>
    .new_page_width{
        width:80%;
        margin:0 auto;
    }
</style>
    